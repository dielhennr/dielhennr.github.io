---
import { siteConfig } from "../config";
---

<section id="education" class="py-16 bg-neutral-950">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-2xl text-center">
      <h2 class="text-3xl font-bold tracking-tight text-white sm:text-4xl scroll-animate">
        Education
      </h2>
      <p class="mt-4 text-lg leading-8 text-gray-300 scroll-animate">
        My academic background and achievements.
      </p>
    </div>
    
    <div class="mx-auto mt-16 max-w-4xl">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {
          siteConfig.education.map((edu, index) => (
            <div class={`scroll-animate education-item ${index % 2 === 0 ? 'animate-fade-in-left' : 'animate-fade-in-right'}`} style={`animation-delay: ${index * 0.15}s`}>
              <div class="bg-neutral-800 rounded-lg shadow-sm border border-neutral-700 p-4 sm:p-5 md:p-6 hover:shadow-md transition-all duration-300 card-3d h-full flex flex-col">
                <div class="flex items-start justify-between mb-4">
                  <div>
                    <h3 class="text-lg sm:text-xl font-semibold text-white group-hover:text-[var(--accent-color)] transition-colors duration-300">
                      {edu.degree}
                    </h3>
                    <p class="text-base sm:text-lg text-[var(--accent-color)] mt-1">
                      {edu.school}
                    </p>
                  </div>
                  <div class="w-12 h-12 bg-[var(--accent-color)] bg-opacity-10 rounded-full flex items-center justify-center">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="text-[var(--accent-color)]"
                    >
                      <path d="M22 10v6M2 10l10-5 10 5-10 5z" />
                      <path d="M6 12v5c3 3 9 3 12 0v-5" />
                    </svg>
                  </div>
                </div>
                
                <div class="space-y-3 flex-1 flex flex-col">
                  <p class="text-sm text-neutral-400">
                    {edu.dateRange}
                  </p>
                  <ul class="space-y-2 flex-1">
                    {edu.achievements.map((achievement: string, achievementIndex: number) => (
                      <li class="flex items-start space-x-2 text-sm text-gray-300 leading-relaxed">
                        <span class="flex-shrink-0 w-1.5 h-1.5 bg-[var(--accent-color)] rounded-full mt-2"></span>
                        <span>{achievement}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  // Initialize scroll animations for Education section
  function initEducationAnimations() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
        }
      });
    }, observerOptions);

    // Observe scroll-animate elements
    const scrollElements = document.querySelectorAll('.scroll-animate');
    scrollElements.forEach(el => observer.observe(el));
  }

  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    initEducationAnimations();
  });
</script>

<style>
  .education-item {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }
  
  .education-item.animate {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Mobile optimizations */
  @media (max-width: 768px) {
    .education-item {
      transform: translateY(15px);
      transition: opacity 0.4s ease-out, transform 0.4s ease-out;
    }
    
    .education-item.animate {
      transform: translateY(0);
    }
    
    /* Ensure consistent grid spacing on mobile */
    .grid {
      gap: 1.5rem !important;
    }
  }
</style>
