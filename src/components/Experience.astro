---
import { siteConfig } from "../config";
---

<section id="experience" class="py-16 bg-neutral-950">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-2xl text-center">
      <h2 class="text-3xl font-bold tracking-tight text-white sm:text-4xl scroll-animate">
        Experience
      </h2>
      <p class="mt-4 text-lg leading-8 text-gray-300 scroll-animate">
        My professional journey in software engineering and distributed systems.
      </p>
    </div>
    
    <div class="mx-auto mt-16 max-w-4xl">
      <div class="relative">
        <!-- Timeline line -->
        <div class="absolute left-1/2 transform -translate-x-px h-full w-0.5 bg-neutral-700 md:block hidden" style="height: calc(100% + 2rem);"></div>
        
        <div class="space-y-12">
          {
            siteConfig.experience.map((job, index) => (
              <div class={`timeline-item relative ${index % 2 === 0 ? 'left-timeline' : 'right-timeline'}`}>
                {/* Timeline dot */}
                <div class="absolute left-1/2 -top-2 w-4 h-4 bg-neutral-400 border-2 rounded-full -translate-x-1/2 z-20 transition-all duration-300 border-neutral-400 hover:bg-[var(--accent-color)] hover:border-[var(--accent-color)] hover:scale-125 md:block hidden"></div>
                
                {/* Content card */}
                <div class={`relative ${index % 2 === 0 ? 'ml-0 mr-auto pr-8' : 'ml-auto mr-0 pl-8'} w-5/12 md:w-5/12 w-full`}>
                  {job.link ? (
                    <a
                      href={job.link}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="block bg-neutral-800 rounded-lg shadow-sm border border-neutral-700 p-4 sm:p-5 md:p-6 hover:shadow-md transition-all duration-300 card-3d group cursor-pointer relative"
                    >
                      <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between mb-4">
                        <h3 class="text-lg sm:text-xl font-semibold text-white group-hover:text-[var(--accent-color)] transition-colors duration-300">
                          {job.title}
                        </h3>
                        <div class="text-sm text-neutral-400 mt-1 sm:mt-0 flex-shrink-0">
                          <div>{job.dateRange.split(' – ')[0]} –</div>
                          <div>{job.dateRange.split(' – ')[1]}</div>
                        </div>
                      </div>
                      <div class="flex items-center gap-2 mb-3 w-fit">
                        <h4 class="text-base sm:text-lg font-medium text-[var(--accent-color)] flex-shrink-0">
                          {job.company}
                        </h4>
                        <div class="flex items-center justify-center w-5 h-5 bg-neutral-900 rounded-full text-white transition-all duration-300 group-hover:bg-neutral-700 flex-shrink-0">
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="12"
                            height="12"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                          >
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
                          </svg>
                        </div>
                      </div>
                      <ul class="space-y-2">
                        {
                          job.bullets.map((bullet, bulletIndex) => (
                            <li class="flex items-start space-x-2 text-sm sm:text-base text-gray-300 leading-relaxed">
                              <span class="flex-shrink-0 w-1.5 h-1.5 bg-[var(--accent-color)] rounded-full mt-2"></span>
                              <span>{bullet}</span>
                            </li>
                          ))
                        }
                      </ul>
                    </a>
                  ) : (
                    <div class="bg-neutral-800 rounded-lg shadow-sm border border-neutral-700 p-4 sm:p-5 md:p-6 hover:shadow-md transition-all duration-300 card-3d">
                      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4">
                        <h3 class="text-lg sm:text-xl font-semibold text-white group-hover:text-[var(--accent-color)] transition-colors duration-300">
                          {job.title}
                        </h3>
                        <div class="text-sm text-neutral-400 mt-1 sm:mt-0">
                          <div>{job.dateRange.split(' – ')[0]} –</div>
                          <div>{job.dateRange.split(' – ')[1]}</div>
                        </div>
                      </div>
                      <h4 class="text-base sm:text-lg font-medium text-[var(--accent-color)] mb-3">
                        {job.company}
                      </h4>
                      <ul class="space-y-2">
                        {
                          job.bullets.map((bullet, bulletIndex) => (
                            <li class="flex items-start space-x-2 text-sm sm:text-base text-gray-300 leading-relaxed">
                              <span class="flex-shrink-0 w-1.5 h-1.5 bg-[var(--accent-color)] rounded-full mt-2"></span>
                              <span>{bullet}</span>
                            </li>
                          ))
                        }
                      </ul>
                    </div>
                  )}
                </div>
              </div>
            ))
          }
          
          {/* Final timeline dot */}
          <div class="relative h-0">
            <div class="absolute left-1/2 -top-4 w-4 h-4 bg-neutral-400 border-2 rounded-full -translate-x-1/2 z-20 transition-all duration-300 border-neutral-400 hover:bg-[var(--accent-color)] hover:border-[var(--accent-color)] hover:scale-125 md:block hidden"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .left-timeline {
    opacity: 0;
    transform: translateX(-30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }
  
  .right-timeline {
    opacity: 0;
    transform: translateX(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }
  
  .left-timeline.animate,
  .right-timeline.animate {
    opacity: 1;
    transform: translateX(0);
  }
  
  /* Responsive timeline */
  @media (max-width: 768px) {
    .left-timeline,
    .right-timeline {
      width: 100% !important;
      margin-left: 0 !important;
      margin-right: 0 !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
      /* Ensure consistent spacing on mobile */
      margin-bottom: 2rem !important;
    }
    
    /* Hide timeline dots on mobile */
    .timeline-item .absolute.left-1/2 {
      display: none !important;
    }
    
    /* Stack timeline items vertically on mobile */
    .timeline-item {
      width: 100% !important;
    }
    
    .timeline-item > div {
      width: 100% !important;
      margin-left: 0 !important;
      margin-right: 0 !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
    }
    
    /* Hide the center timeline line on mobile */
    .timeline-item::before {
      display: none !important;
    }
    
    /* Simplify animations on mobile for better performance */
    .left-timeline,
    .right-timeline {
      transform: translateY(20px);
      transition: opacity 0.4s ease-out, transform 0.4s ease-out;
    }
    
    .left-timeline.animate,
    .right-timeline.animate {
      transform: translateY(0);
    }
  }
</style>

<script>
  // Timeline scroll animations
  function initTimelineAnimations() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          // Add delay based on index for staggered animation
          setTimeout(() => {
            entry.target.classList.add('animate');
          }, index * 150);
        }
      });
    }, observerOptions);

    // Observe timeline items
    const timelineItems = document.querySelectorAll('.timeline-item');
    timelineItems.forEach(el => observer.observe(el));
  }

  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    initTimelineAnimations();
  });
</script>
