---
import { siteConfig } from "../config";
---

<section id="projects" class="py-16 bg-neutral-950">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-2xl text-center">
      <h2 class="text-3xl font-bold tracking-tight text-white sm:text-4xl scroll-animate">
        Projects
      </h2>
      <p class="mt-4 text-lg leading-8 text-gray-300 scroll-animate">
        A collection of my work in distributed systems, data science, and software engineering.
      </p>
    </div>
    <div class="mx-auto mt-16 grid max-w-2xl grid-cols-1 gap-8 sm:mt-20 sm:grid-cols-2 lg:mx-0 lg:max-w-none lg:grid-cols-2 gesture-container">
      {
        siteConfig.projects.map((project, index) => (
          <a
            href={project.link}
            target="_blank"
            rel="noopener noreferrer"
            class={`block relative p-4 sm:p-6 md:p-8 bg-neutral-800 rounded-xl sm:rounded-2xl border border-neutral-700 transition-all duration-500 card-3d scroll-animate group touch-manipulation ${
              index % 2 === 0 ? 'animate-fade-in-left' : 'animate-fade-in-right'
            }`}
            style={`animation-delay: ${index * 0.2}s`}
          >
            <div class="absolute top-4 right-4 sm:top-6 sm:right-6 md:top-8 md:right-8">
              <div class="flex items-center justify-center w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 bg-neutral-900 rounded-full text-white transition-all duration-300 group-hover:bg-neutral-700">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  class="w-4 h-4 sm:w-4.5 sm:h-4.5 md:w-5 md:h-5 transition-transform duration-300 group-hover:translate-x-0.5 group-hover:-translate-y-0.5"
                >
                  <path d="M7 7h10v10" />
                  <path d="M7 17 17 7" />
                </svg>
              </div>
            </div>
            <div class="flex flex-col h-full">
              <div class="flex-1">
                <h3 class="text-xl sm:text-2xl font-semibold text-white mb-3 group-hover:text-[var(--accent-color)] transition-colors duration-300">
                  {project.name}
                </h3>
                <p class="text-gray-300 text-sm sm:text-base leading-relaxed mb-6">
                  {project.description}
                </p>
              </div>
              <div class="flex flex-wrap gap-2">
                {
                  project.skills.map((skill, skillIndex) => (
                    <span
                      class={`skill-tag animate-scale-in`}
                      style={`animation-delay: ${(index * 0.2) + (skillIndex * 0.1)}s`}
                    >
                      {skill}
                    </span>
                  ))
                }
              </div>
            </div>
          </a>
        ))
      }
    </div>
    

  </div>
</section>

<script>
  // Scroll-triggered animations
  function initScrollAnimations() {
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate');
        }
      });
    }, observerOptions);

    // Observe all scroll-animate elements
    const scrollElements = document.querySelectorAll('.scroll-animate');
    scrollElements.forEach(el => observer.observe(el));
  }

  // Initialize animations when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    initScrollAnimations();
  });
</script>
